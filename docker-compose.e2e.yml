version: '3.8'

services:
  client:
    build: ./client
    ports:
      - '5173:5173'
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://server:5000/api
    env_file:
      - ./client/.env
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      - server
    networks:
      - app-network

  server:
    build: ./server
    ports:
      - '5000:5000'
    environment:
      - NODE_ENV=development
    env_file:
      - ./server/.env
    volumes:
      - ./server:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: postgres:latest
    container_name: tradetap_db
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  cypress:
    build:
      context: ./client
      dockerfile: Dockerfile.e2e
    working_dir: /app
    command: npx cypress run
    depends_on:
      - client
    environment:
      - CYPRESS_BASE_URL=http://client:5173
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
