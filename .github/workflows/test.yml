name: Test Suite

on:
  pull_request:
    branches: [main, dev, stage]
  push:
    branches: [main, dev, stage]

jobs:
  client-tests:
    name: Client Unit Tests (Jest)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run client tests (Jest)
        run: npm run test -- --ci --coverage

  server-tests:
    name: Server Unit Tests (Jest)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run server tests (Jest)
        run: npm run test -- --ci --coverage

  client-e2e:
    name: Client E2E Tests (Cypress)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client

    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Write client/.env for frontend
        run: |
          echo "VITE_API_URL=http://localhost:5001/api" >> .env

      - name: Write server/.env file from GitHub secrets
        run: |
          echo "POSTGRES_USER=$POSTGRES_USER" >> ../server/.env
          echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> ../server/.env
          echo "POSTGRES_DB=$POSTGRES_DB" >> ../server/.env

      - name: Start full app via Docker Compose
        run: |
          docker compose up -d

      - name: Wait for frontend to be ready
        run: npx wait-on http://localhost:5173

      - name: Run Cypress tests
        run: npx cypress run

      - name: Upload Cypress videos (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: client/cypress/videos
